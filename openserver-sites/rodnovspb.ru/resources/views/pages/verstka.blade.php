@extends('layouts.layout')

@section('title')Верстка сайта | Заказать верстку сайта html @endsection

@section('keywords')верстка, сайта, заказать, html, css, создание @endsection

@section('description')Сверстаем сайт, адаптируем под мобильные устройства, напишем скрипты js. Также у нас можно заказать создание сайта@endsection

@section('content')
    <div class="container page">

        <h1 class="page__title">Верстка сайта</h1>

        <p>Верстка является одним из ключевых этапов в создании сайта, так как она определяет внешний вид и функциональность приложения. Выполним верстку сайта по макету из фотошоп, фигмы и других программ. Адаптируем под мобильные устройства, напишем скрипты js. Код будет соответствовать стандартам W3C. Также у нас можно <a class="underlined" href="{{ route('index') }}" title="Заказать создание сайта">заказать сайт</a> с разработкой под ключ.</p>

        <section>
            <h3 class="underlined">Что такое верстка</h3>
            <p>Первым этапом создания сайта (если не рассматривать идеи, прототипирование и др.) является дизайн. Дизайн - это по сути изображение-полотно, графическое представление того, как будет выглядеть сайт. А сайт из себя представляет набор элементов: логотип, контакты, ссылки, изображения и пр. Все эти элементы обычно реагируют на действия пользователя.</p>
            <p>Верстка сайта представляет собой разбиение полотна дизайна на такие элементы. Причем эти части помещаются в специальные теги (div, span, img и др.). Например, верстальщик видит на дизайне логотип, сохраняет его в папку, а в коде пишет: <code>&lt;img src="ссылка на логотип"&gt;</code>. Работы по верстке как раз и представляет по большей части написание такого кода, когда дизайн превращается в набор тегов.</p>
            <p>Сами теги пишутся в определенном порядке. Браузер читает их и на лету создает страницу сайта. Верстка - по сути структурированный по определенным правилам набор тегов, помещенных в блоки. Блоки - тоже теги.</p>
            <p>Весь код помещается в родительский тег html. Страница начинается и заканчивается этим тегом. Все что вне его браузер не воспринимает.</p>
            <p>Ниже идет тег head. В нем пишется кодировка страницы, информация для поисковых систем (ключевые слова, описание страницы, заголовок). Например на вкладке браузера вы видите надпись: <span class="selected">Верстка сайта</span>. Она взята браузером из блока head. Также в этом блоке подключаются js скрипты и css стили, помещается другая служебная информация.</p>
            <p>Ниже идет блок body - здесь размещается основное содержание страницы. Body разбивается на множество других тегов: header, main, section, div, footer и т.д. Тегов огромное количество. У каждого из них есть еще атрибуты. Например: ширина, высота, класс, стили, идентификатор и т.д.</p>
            <p>Верстку любой страницы можно посмотреть в браузере. Нажимаете правую кнопку мыши, выбираете "Просмотр кода страницы". Также там написаны вспомогательные скрипты и другая информация.</p>
        </section>

        <section>
            <h3 class="underlined">Что важно</h3>
            <ol>
                <li><b>Вадидность.</b> Правильная верстка должна отвечать перечню правил в стандарте W3C. Для проверки соответствия есть специальный инструмент валидатор - https://validator.w3.org</li>
                <li><b>Адаптивность.</b> Cайт должен подстраиваться под размеры экрана устройств. Обычно это: 375, 576, 768, 992, 1200, 1400px</li>
                <li><b>Кроссбраузерность.</b> Так как браузеров много, разрабатываются они отдельными организациями и иногда в одном браузере тег обрабатывается одним образом, в другом браузере по-другому или не отображается и т.д. Интернет развивается, придумываются новые теги, браузеры устаревают. Для того, чтобы верстка отображалась без ошибок она должна быть кроссбраузерной. По-русски: совместимой с большинством браузеров.</li>
                <li><b>Возможность подстраиваться.</b> Сайт живет. В нем появляются новые статьи, картинки, изменятся размеры элементов и пр. Верстальщик должен заранее предусмотреть, чтобы сайт отображался правильно при изменении содержания страницы. Например можно задать размер блока как width='300px' и min-width='300px'. В первом случае сайт 'сломается', если пользователь добавит текст в блок. Во-втором случае блок растянется без привлечения верстальщика.</li>
                <li><b>Скорость загрузки.</b> Писать код нужно грамотно, стараться не подгружать громоздкие библиотеки, картинки сжимать, использовать предзагрузку, эффекты лучше создавать через css и многое другое. Компьютеры сейчас мощные, интернет скоростной, но зачем перегружать сайт там где можно упростить? </li>
            </ol>
        </section>

        <section>
            <h3 class="underlined">Стоимость и сроки верстки сайта</h3>
            <p>Стоимость верстки - <span class="selected">&nbsp;от 5000 руб.</span> Зависит от сложности, количества страниц, наличия анимации и пр.
            </p>
        </section>
    </div>

@endsection



